{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/Git/vehicle_int/src/context/ThemeContext.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/React.createContext();\nconst themeData = {\n  light: {\n    textColor: \"black\",\n    background: \"#f5f5f5\"\n  },\n  dark: {\n    textColor: \"white\",\n    background: \"#424242\"\n  }\n};\n\nconst ThemeContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [currentTheme, setCurrentTheme] = useState(\"light\");\n\n  const toggleTheme = () => {\n    setCurrentTheme(currentTheme === \"light\" ? \"dark\" : \"light\");\n  };\n\n  const value = {\n    currentTheme,\n    toggleTheme,\n    theme: themeData[currentTheme]\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\n\n_s(ThemeContextProvider, \"cgaAC9i6pueOdSJ5f2ilYKnX7L8=\");\n\n_c = ThemeContextProvider;\nexport { ThemeContext, ThemeContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeContextProvider\");","map":{"version":3,"sources":["/Users/home/Desktop/Git/vehicle_int/src/context/ThemeContext.jsx"],"names":["useState","React","ThemeContext","createContext","themeData","light","textColor","background","dark","ThemeContextProvider","children","currentTheme","setCurrentTheme","toggleTheme","value","theme"],"mappings":";;;AAAA,SAAUA,QAAV,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,gBAACD,KAAK,CAACE,aAAN,EAAnB;AAEA,MAAMC,SAAS,GAAC;AACZC,EAAAA,KAAK,EAAC;AACFC,IAAAA,SAAS,EAAC,OADR;AAEFC,IAAAA,UAAU,EAAC;AAFT,GADM;AAKZC,EAAAA,IAAI,EAAC;AACDF,IAAAA,SAAS,EAAC,OADT;AAEDC,IAAAA,UAAU,EAAC;AAFV;AALO,CAAhB;;AAUA,MAAME,oBAAoB,GAAC,QAAc;AAAA;;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AAGvC,QAAM,CAACC,YAAD,EAAcC,eAAd,IAA+BZ,QAAQ,CAAC,OAAD,CAA7C;;AACA,QAAMa,WAAW,GAAC,MAAI;AAClBD,IAAAA,eAAe,CAACD,YAAY,KAAG,OAAf,GAAuB,MAAvB,GAA8B,OAA/B,CAAf;AACH,GAFD;;AAGA,QAAMG,KAAK,GAAC;AAACH,IAAAA,YAAD;AAAcE,IAAAA,WAAd;AAA0BE,IAAAA,KAAK,EAACX,SAAS,CAACO,YAAD;AAAzC,GAAZ;AACA,sBAAO,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEG,KAA9B;AAAA,cAAsCJ;AAAtC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CATD;;GAAMD,oB;;KAAAA,oB;AAWN,SAAQP,YAAR,EAAqBO,oBAArB","sourcesContent":["import {  useState } from \"react\";\nimport React from \"react\";\n\nconst ThemeContext=React.createContext();\n\nconst themeData={\n    light:{\n        textColor:\"black\",\n        background:\"#f5f5f5\"\n    },\n    dark:{\n        textColor:\"white\",\n        background:\"#424242\"\n    }\n}\nconst ThemeContextProvider=({children})=>{\n\n\n  const [currentTheme,setCurrentTheme]=useState(\"light\");\n  const toggleTheme=()=>{\n      setCurrentTheme(currentTheme===\"light\"?\"dark\":\"light\")\n  }\n  const value={currentTheme,toggleTheme,theme:themeData[currentTheme]}\n  return <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>\n}\n\nexport {ThemeContext,ThemeContextProvider}\n\n"]},"metadata":{},"sourceType":"module"}